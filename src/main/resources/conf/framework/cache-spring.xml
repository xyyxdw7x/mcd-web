<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:util="http://www.springframework.org/schema/util" 
	xmlns:mongo="http://www.springframework.org/schema/data/mongo" 
	xmlns:cache="http://www.springframework.org/schema/cache"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/util
	http://www.springframework.org/schema/util/spring-util.xsd
	http://www.springframework.org/schema/context   
    http://www.springframework.org/schema/context/spring-context.xsd
    http://www.springframework.org/schema/data/mongo
    http://www.springframework.org/schema/data/mongo/spring-mongo.xsd
    http://www.springframework.org/schema/cache
    http://www.springframework.org/schema/cache/spring-cache.xsd
    http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop.xsd
	">
	<!-- 启用cacheenable注解 -->
	<cache:annotation-driven cache-manager="cacheManagerSpring" key-generator="memcachedKeyGenerator" />
	<!-- memcached key generator -->
	<bean id="memcachedKeyGenerator" class="com.asiainfo.biapp.framework.cache.memcached.MemcachedKeyGenerator"/>
    <!-- spring简单的map缓存管理器 --> 
    <bean id="cacheManagerSpring" class="org.springframework.cache.support.SimpleCacheManager">
    	<property name="caches"> 
       		<set>
         		<bean class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean" p:name="default" />
       		</set> 
     	</property>
   	</bean>
   	<!-- memcached缓存管理器  expireMap中定义了一个默认的缓存 永不失效 但是在晚上调度的时候会清空缓存
	<bean id="cacheManager" class="com.asiainfo.biapp.framework.cache.memcached.MemcachedCacheManager" scope="singleton">  
    	<property name="memcachedClient" ref="memcachedClient" />  
        <property name="expireMap">  
        	<map>  
                <entry key="default" value="0" />  
            </map>  
        </property>
    </bean>
     -->
    <!-- memcachedClient 
   	<bean name="memcachedClient" class="net.rubyeye.xmemcached.utils.XMemcachedClientFactoryBean" destroy-method="shutdown">
    	<property name="servers">
        	<value>${app_memcached_servers}</value>
        </property>
        <property name="connectionPoolSize" value="5"/>
        <property name="commandFactory">
        	<bean class="net.rubyeye.xmemcached.command.BinaryCommandFactory"/>
        </property>
        <property name="sessionLocator">
            <bean class="net.rubyeye.xmemcached.impl.KetamaMemcachedSessionLocator"/>
        </property>
        <property name="transcoder">
            <bean class="net.rubyeye.xmemcached.transcoders.SerializingTranscoder" />
        </property>
        <property name="bufferAllocator">
            <bean class="net.rubyeye.xmemcached.buffer.SimpleBufferAllocator"></bean>
        </property>
    </bean>
    -->
    
    <!-- cache advice -->
    <cache:advice id="cacheAdvice" cache-manager="cacheManagerSpring" key-generator="memcachedKeyGenerator" >
    	<cache:caching cache="default">
    		<cache:cacheable method="findDim*"  />
    		<cache:cacheable method="getDim*"/>
    		<cache:cacheable method="queryDim*"/>
    		<cache:cacheable method="searchDim*"/>
    		<cache:cache-evict method="delete*" all-entries="true" />
    		<cache:cache-evict method="deleteAll*" all-entries="true"/>
    		<cache:cache-evict method="flush*" all-entries="true"/>
    		<cache:cache-evict method="flushAll*" all-entries="true"/>
    	</cache:caching>
    </cache:advice>
    <!-- aop config dao and service-->
    <aop:config>
    	<aop:pointcut id="pointcutService" expression="execution(* com.asiainfo.biapp.mcd.*.service..*ServiceImpl.*(..)) and not @annotation(org.springframework.cache.annotation.Cacheable)" />
    	<aop:pointcut id="pointcutDao" expression="execution(* com.asiainfo.biapp.mcd.*.dao..*DaoImpl.*(..)) and not @annotation(org.springframework.cache.annotation.Cacheable)" />
		<aop:advisor advice-ref="cacheAdvice" pointcut-ref="pointcutDao" />
		<aop:advisor advice-ref="cacheAdvice" pointcut-ref="pointcutService"/>
    </aop:config>
</beans>